<Window x:Class="ManyWeapons.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ManyWeapons.Converters"
        xmlns:vm="clr-namespace:ManyWeapons.View"
        xmlns:helper="clr-namespace:ManyWeapons.Model"
        Closing="Window_Closing"
        Title="Many Weapons" Height="800" Width="1200"
        Background="#1e1e1e" Foreground="White"
        AllowDrop="True"
        Drop="Window_Drop"
        DragOver="Window_DragOver">

    <Window.Resources>
        <!-- Sidebar button style -->

        <!-- Dark theme base colors -->
        <Color x:Key="DarkBackground">#1e1e1e</Color>
        <Color x:Key="DarkPanel">#2d2d30</Color>
        <Color x:Key="AccentOrange">#FF9800</Color>
        <Color x:Key="TextColor">White</Color>

        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{StaticResource DarkBackground}"/>
        <SolidColorBrush x:Key="DarkPanelBrush" Color="{StaticResource DarkPanel}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentOrange}"/>
        <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>

        <!-- Sidebar button style -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl dark theme style -->
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="ContentTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Tab headers -->
                            <TabPanel 
                        Grid.Row="0"
                        IsItemsHost="True"
                        Background="{StaticResource DarkPanelBrush}"
                        Margin="0"
                        KeyboardNavigation.TabIndex="1" />

                            <!-- Selected tab content (intentionally blank) -->
                            <ContentPresenter 
                        Grid.Row="1"
                        ContentSource="SelectedContent"
                        Margin="0"
                        KeyboardNavigation.TabNavigation="Local" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- TabItem style -->
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="10,2" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DarkBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ThemedSubTabControl" TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <TabPanel Background="{StaticResource DarkBackgroundBrush}"
                          IsItemsHost="True"
                          Margin="0"
                          KeyboardNavigation.TabIndex="1"
                          Panel.ZIndex="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ThemedSubTabItem" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                            <ContentPresenter ContentSource="Header"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Selected tab -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>

                            <!-- Hover (not selected) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#444444"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- GroupBox style -->
        <Style TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderThickness" Value="0.7"/>
        </Style>

        <!-- ComboBoxToggleButton (arrow part) -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Path HorizontalAlignment="Right" VerticalAlignment="Center" 
                      Margin="0,0,4,0" 
                      Data="M 0 0 L 4 4 L 8 0 Z" 
                      Fill="{StaticResource AccentBrush}" />
                    <!--"{TemplateBinding Foreground}"-->
                </Grid>
            </Border>
        </ControlTemplate>

        <!-- ComboBox style -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="HorizontalContentAlignment"
        Value="{Binding Path=HorizontalContentAlignment, 
                RelativeSource={RelativeSource AncestorType=ItemsControl, AncestorLevel=1}, 
                FallbackValue=Left}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock Text="{TemplateBinding SelectionBoxItem}"
           Foreground="{StaticResource TextBrush}"
           Margin="4"
           VerticalAlignment="Center"
           HorizontalAlignment="Left"/>
                            </ToggleButton>
                            <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                                <Border Background="{StaticResource DarkPanelBrush}"
                                    BorderBrush="{StaticResource AccentBrush}"
                                    BorderThickness="1"
                                    MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBoxItem style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- TextBox style -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
        </Style>

        <!-- CheckBox style -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="18" Height="18"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter.Content>
                                        <Path x:Name="CheckMark"
                                      Visibility="Collapsed"
                                      Stroke="{StaticResource AccentBrush}"
                                      StrokeThickness="2"
                                      Data="M2,6 L5,9 L10,3" />
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </Border>
                            <ContentPresenter Margin="5,0,0,0"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Brushes -->
        <!-- Brushes updated to match orange/black theme -->
        <SolidColorBrush x:Key="arrowButtonForeground" Color="#FF9800"/>
        <!-- Orange -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#1e1e1e"/>
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#FFB84D"/>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#2d2d30"/>
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#555"/>
        <SolidColorBrush x:Key="NormalBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="White"/>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFB84D" Offset="0.0"/>
            <GradientStop Color="#FF9800" Offset="0.5"/>
            <GradientStop Color="#FF6F00" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientStop Color="#2d2d30" Offset="0.0"/>
            <GradientStop Color="#2d2d30" Offset="0.6"/>
            <GradientStop Color="#1e1e1e" Offset="1.0"/>
        </LinearGradientBrush>

        <!-- ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border
               Name="Border"
               Margin="1"
               CornerRadius="2"
               Background="Transparent"
               BorderBrush="{StaticResource NormalBorderBrush}"
               BorderThickness="0">
                            <Path
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Fill="White"
                       Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                       Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                       Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Repeat Buttons (middle area) -->
        <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Thumb -->
        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border
               CornerRadius="2"
               Background="{TemplateBinding Background}"
               BorderBrush="{TemplateBinding BorderBrush}"
               BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Vertical ScrollBar Template -->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
            <Grid Width="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Horizontal ScrollBar Template -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
            <Grid Height="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Corner Template -->
        <ControlTemplate x:Key="ScrollViewerCorner" TargetType="Control">
            <Border Background="Transparent" />
        </ControlTemplate>

        <!-- Style for overall ScrollBar -->
        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12"/>
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall ScrollViewer -->
        <Style x:Key="FavsScrollViewer" TargetType="ScrollViewer">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                   Grid.Column="1" Grid.Row="0"
                   Value="{TemplateBinding VerticalOffset}"
                   Maximum="{TemplateBinding ScrollableHeight}"
                   ViewportSize="{TemplateBinding ViewportHeight}"
                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
                   Orientation="Horizontal"
                   Grid.Column="0" Grid.Row="1"
                   Value="{TemplateBinding HorizontalOffset}"
                   Maximum="{TemplateBinding ScrollableWidth}"
                   ViewportSize="{TemplateBinding ViewportWidth}"
                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Control Template="{StaticResource ScrollViewerCorner}" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <local:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:StringToBoolConverter x:Key="StringToBoolConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Sidebar -->
        <StackPanel Grid.Column="0" Background="{StaticResource DarkPanelBrush}">
            <Image Source="/Images/ManyWeapons_Logo_128.png" Height="60" Margin="10"/>

            <ItemsControl ItemsSource="{Binding SidebarTabs}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource SidebarButtonStyle}"
                                ToolTip="{Binding Name}"
                                Command="{Binding DataContext.SelectTabCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding Name}">
                            <TextBlock Text="{Binding Icon}" FontSize="20" HorizontalAlignment="Center"/>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <!-- Main Content -->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Subcategory Tabs -->
            <TabControl Grid.Row="0"
    Style="{StaticResource ThemedSubTabControl}"
    Visibility="{Binding SelectedSection.UsesSubgroups, Converter={StaticResource BoolToVisibilityConverter}}"
    ItemsSource="{Binding CurrentSubcategories}"
    SelectedItem="{Binding SelectedSubcategory}"
    SelectionChanged="SubcategoryTab_Changed"
    Height="30">
                <TabControl.ItemContainerStyle>
                    <StaticResource ResourceKey="ThemedSubTabItem"/>
                </TabControl.ItemContainerStyle>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </TabControl>

            <!-- Main Section Content -->
            <Grid Grid.Row="1" Margin="10" Background="{StaticResource DarkBackgroundBrush}">
                <!-- Drop file placeholder -->
                <TextBlock Text="Drop file here"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="40"
                           Foreground="Gray"
                           Visibility="{Binding IsFileLoaded, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=invert}" />

                <!-- Loaded content -->
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ContentControl>
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <!-- Show custom GeneralSectionView -->
                                    <DataTrigger Binding="{Binding SelectedSection.Name}" Value="General Info">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <vm:GeneralInfoView />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <!-- Default fallback to dynamic layout -->
                                    <DataTrigger Binding="{Binding SelectedSection.Name}" Value="{x:Null}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <!-- For other sections -->
                                    <DataTrigger Binding="{Binding SelectedSection.Name}" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <vm:GenericSectionView />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <!-- Fallback for everything else -->
                                    <Trigger Property="Content" Value="{x:Null}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <vm:GenericSectionView  />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </ScrollViewer>


            </Grid>
        </Grid>
    </Grid>
</Window>
