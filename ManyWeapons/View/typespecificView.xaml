<UserControl x:Class="ManyWeapons.View.typespecificView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ManyWeapons.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!-- Dark theme base colors -->
        <Color x:Key="DarkBackground">#1e1e1e</Color>
        <Color x:Key="DarkPanel">#2d2d30</Color>
        <Color x:Key="AccentOrange">#FF9800</Color>
        <Color x:Key="TextColor">White</Color>

        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{StaticResource DarkBackground}"/>
        <SolidColorBrush x:Key="DarkPanelBrush" Color="{StaticResource DarkPanel}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentOrange}"/>
        <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>


        <Style x:Key="DarkTabItemContent" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}" />
        </Style>

        <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <!-- Add this -->
            <Setter Property="Margin" Value="0,0,5,5" />
        </Style>

        <Style x:Key="FieldCheckStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,5" />
        </Style>

        <!-- Sidebar button style -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl dark theme style -->
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="ContentTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Tab headers -->
                            <TabPanel 
                Grid.Row="0"
                IsItemsHost="True"
                Background="{StaticResource DarkPanelBrush}"
                Margin="0"
                KeyboardNavigation.TabIndex="1" />

                            <!-- Selected tab content (intentionally blank) -->
                            <ContentPresenter 
                Grid.Row="1"
                ContentSource="SelectedContent"
                Margin="0"
                KeyboardNavigation.TabNavigation="Local" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- TabItem style -->
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="10,2" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DarkBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ThemedSubTabControl" TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Tab Headers -->
                            <TabPanel 
                        Grid.Row="0"
                        IsItemsHost="True"
                        Background="{StaticResource DarkBackgroundBrush}"
                        Margin="0"
                        Panel.ZIndex="1"/>

                            <!-- Selected Tab Content -->
                            <ContentPresenter 
                        Grid.Row="1"
                        ContentSource="SelectedContent"
                        Margin="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ThemedSubTabItem" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
                            <ContentPresenter ContentSource="Header"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Selected tab -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>

                            <!-- Hover (not selected) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#444444"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- GroupBox style -->
        <Style TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderThickness" Value="0.7"/>
        </Style>

        <!-- ComboBoxToggleButton (arrow part) -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}" 
        BorderBrush="{TemplateBinding BorderBrush}" 
        BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Path HorizontalAlignment="Right" VerticalAlignment="Center" 
              Margin="0,0,4,0" 
              Data="M 0 0 L 4 4 L 8 0 Z" 
              Fill="{StaticResource AccentBrush}" />
                    <!--"{TemplateBinding Foreground}"-->
                </Grid>
            </Border>
        </ControlTemplate>

        <!-- ComboBox style -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="HorizontalContentAlignment"
Value="{Binding Path=HorizontalContentAlignment, 
        RelativeSource={RelativeSource AncestorType=ItemsControl, AncestorLevel=1}, 
        FallbackValue=Left}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                              Template="{StaticResource ComboBoxToggleButton}"
                              Grid.Column="2"
                              Focusable="false"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock Text="{TemplateBinding SelectionBoxItem}"
   Foreground="{StaticResource TextBrush}"
   Margin="4"
   VerticalAlignment="Center"
   HorizontalAlignment="Left"/>
                            </ToggleButton>
                            <Popup Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Slide">
                                <Border Background="{StaticResource DarkPanelBrush}"
                            BorderBrush="{StaticResource AccentBrush}"
                            BorderThickness="1"
                            MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBoxItem style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- TextBox style -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
        </Style>

        <!-- CheckBox style -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="18" Height="18"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                                <Path x:Name="CheckMark"
                  Width="12"
                  Height="12"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Visibility="Collapsed"
                  Stroke="{StaticResource AccentBrush}"
                  StrokeThickness="2"
                  Data="M2,6 L5,9 L10,3"/>
                            </Border>
                            <ContentPresenter Margin="5,0,0,0"
                          VerticalAlignment="Center"
                          RecognizesAccessKey="True"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Brushes -->
        <!-- Brushes updated to match orange/black theme -->
        <SolidColorBrush x:Key="arrowButtonForeground" Color="#FF9800"/>
        <!-- Orange -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#1e1e1e"/>
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#FFB84D"/>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#2d2d30"/>
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#555"/>
        <SolidColorBrush x:Key="NormalBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="White"/>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFB84D" Offset="0.0"/>
            <GradientStop Color="#FF9800" Offset="0.5"/>
            <GradientStop Color="#FF6F00" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientStop Color="#2d2d30" Offset="0.0"/>
            <GradientStop Color="#2d2d30" Offset="0.6"/>
            <GradientStop Color="#1e1e1e" Offset="1.0"/>
        </LinearGradientBrush>

        <!-- ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border
       Name="Border"
       Margin="1"
       CornerRadius="2"
       Background="Transparent"
       BorderBrush="{StaticResource NormalBorderBrush}"
       BorderThickness="0">
                            <Path
           HorizontalAlignment="Center"
           VerticalAlignment="Center"
           Fill="White"
               Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
               Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
               Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Repeat Buttons (middle area) -->
        <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Thumb -->
        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border
       CornerRadius="2"
       Background="{TemplateBinding Background}"
       BorderBrush="{TemplateBinding BorderBrush}"
       BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Vertical ScrollBar Template -->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
            <Grid Width="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Horizontal ScrollBar Template -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
            <Grid Height="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Corner Template -->
        <ControlTemplate x:Key="ScrollViewerCorner" TargetType="Control">
            <Border Background="Transparent" />
        </ControlTemplate>

        <!-- Style for overall ScrollBar -->
        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12"/>
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall ScrollViewer -->
        <Style x:Key="FavsScrollViewer" TargetType="ScrollViewer">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
           Grid.Column="1" Grid.Row="0"
           Value="{TemplateBinding VerticalOffset}"
           Maximum="{TemplateBinding ScrollableHeight}"
           ViewportSize="{TemplateBinding ViewportHeight}"
           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
           Orientation="Horizontal"
           Grid.Column="0" Grid.Row="1"
           Value="{TemplateBinding HorizontalOffset}"
           Maximum="{TemplateBinding ScrollableWidth}"
           ViewportSize="{TemplateBinding ViewportWidth}"
           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Control Template="{StaticResource ScrollViewerCorner}" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid Background="{StaticResource DarkBackgroundBrush}">
        <TabControl>
            <TabItem Header="Grenade Weapon" Style="{StaticResource ThemedSubTabItem}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Background="{StaticResource DarkBackgroundBrush}">
                    <StackPanel Margin="10">

                        <!-- General -->
                        <GroupBox Header="General Settings">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="stickiness" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" SelectedValue="{Binding [stickiness], Mode=TwoWay}"
                          ItemsSource="{Binding StickinessOptions}"
                          SelectedValuePath="." >
                                </ComboBox>

                                <TextBlock Text="projectileModel" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding [projectileModel], Mode=TwoWay}"/>

                                <TextBlock Text="projExplosionType" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" SelectedValue="{Binding [projExplosionType], Mode=TwoWay}"
                ItemsSource="{Binding ExplosionTypes}"
                SelectedValuePath="." >

                                </ComboBox>

                                <TextBlock Text="sharedAmmoCapName" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding [sharedAmmoCapName], Mode=TwoWay}"/>
                            </Grid>
                        </GroupBox>

                        <!-- Effects -->
                        <GroupBox Header="Effects">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="projExplosionEffect" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding [projExplosionEffect], Mode=TwoWay}"/>

                                <TextBlock Text="projExplosionSound" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding [projExplosionSound], Mode=TwoWay}"/>

                                <TextBlock Text="projTrailEffect" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding [projTrailEffect], Mode=TwoWay}"/>

                                <TextBlock Text="tagFx_preparationEffect" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding [tagFx_preparationEffect], Mode=TwoWay}"/>

                                <TextBlock Text="tagFlash_preparationEffect" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding [tagFlash_preparationEffect], Mode=TwoWay}"/>
                            </Grid>
                        </GroupBox>

                        <!-- Animation / Sound -->
                        <GroupBox Header="Animation / Sound">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="holdFireAnim" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding [holdFireAnim], Mode=TwoWay}"/>

                                <TextBlock Text="detonateAnim" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding [detonateAnim], Mode=TwoWay}"/>

                                <TextBlock Text="pullbackSound" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding [pullbackSound], Mode=TwoWay}"/>

                                <TextBlock Text="pullbackSoundPlayer" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding [pullbackSoundPlayer], Mode=TwoWay}"/>

                                <TextBlock Text="detonateSound" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding [detonateSound], Mode=TwoWay}"/>

                                <TextBlock Text="detonateSoundPlayer" Grid.Row="2" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding [detonateSoundPlayer], Mode=TwoWay}"/>
                            </Grid>
                        </GroupBox>

                        <!-- Flags -->
                        <GroupBox Header="Flags">
                            <UniformGrid Columns="2" Margin="10">
                                <CheckBox Content="canUseInVehicle" IsChecked="{Binding [canUseInVehicle], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="noDropsOrRaises" IsChecked="{Binding [noDropsOrRaises], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="projImpactExplode" IsChecked="{Binding [projImpactExplode], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="projExplosionEffectForceNormalUp" IsChecked="{Binding [projExplosionEffectForceNormalUp], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="holdButtonToThrow" IsChecked="{Binding [holdButtonToThrow], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="freezeMovementWhenFiring" IsChecked="{Binding [freezeMovementWhenFiring], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="hasDetonator" IsChecked="{Binding [hasDetonator], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}"/>
                                <CheckBox Content="timedDetonation" IsChecked="{Binding [timedDetonation], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="rotate" IsChecked="{Binding [rotate], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="cookable" IsChecked="{Binding [cookable], Mode=TwoWay,Converter={StaticResource StringToBoolConverter}}" />
                            </UniformGrid>
                        </GroupBox>

                        <!-- Timing / Damage -->
                        <GroupBox Header="Timing / Damage">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="250"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="explosionInnerDamage" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [explosionInnerDamage], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="explosionOuterDamage" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [explosionOuterDamage], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <TextBlock Text="explosionRadius" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [explosionRadius], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                                <TextBlock Text="explosionRadiusMin" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [explosionRadiusMin], Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>

                                <TextBlock Text="damageConeAngle" Grid.Row="4" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [damageConeAngle], Mode=TwoWay}" Grid.Row="4" Grid.Column="1"/>

                                <TextBlock Text="projectileSpeed" Grid.Row="5" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileSpeed], Mode=TwoWay}" Grid.Row="5" Grid.Column="1"/>

                                <TextBlock Text="projectileSpeedUp" Grid.Row="6" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileSpeedUp], Mode=TwoWay}" Grid.Row="6" Grid.Column="1"/>

                                <TextBlock Text="projectileSpeedForward" Grid.Row="7" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileSpeedForward], Mode=TwoWay}" Grid.Row="7" Grid.Column="1"/>

                                <TextBlock Text="projectileActivateDist" Grid.Row="8" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileActivateDist], Mode=TwoWay}" Grid.Row="8" Grid.Column="1"/>

                                <TextBlock Text="holdFireTime" Grid.Row="9" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [holdFireTime], Mode=TwoWay}" Grid.Row="9" Grid.Column="1"/>

                                <TextBlock Text="detonateTime" Grid.Row="10" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [detonateTime], Mode=TwoWay}" Grid.Row="10" Grid.Column="1"/>

                                <TextBlock Text="detonateDelay" Grid.Row="11" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [detonateDelay], Mode=TwoWay}" Grid.Row="11" Grid.Column="1"/>

                                <TextBlock Text="fuseTime" Grid.Row="12" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [fuseTime], Mode=TwoWay}" Grid.Row="12" Grid.Column="1"/>
                            </Grid>
                        </GroupBox>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Projectile Weapon" Style="{StaticResource ThemedSubTabItem}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Background="{StaticResource DarkBackgroundBrush}">
                    <StackPanel Margin="10">

                        <!-- Projectile Settings -->
                        <GroupBox Header="Projectile Settings">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="rocketModel" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [rocketModel], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="projectileSound" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileSound], Mode=TwoWay}" Grid.Row="0" Grid.Column="3"/>

                                <TextBlock Text="projIgnitionSound" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projIgnitionSound], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <TextBlock Text="projIgnitionEffect" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projIgnitionEffect], Mode=TwoWay}" Grid.Row="1" Grid.Column="3"/>

                                <TextBlock Text="projDudSound" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projDudSound], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                                <TextBlock Text="projDudEffect" Grid.Row="2" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projDudEffect], Mode=TwoWay}" Grid.Row="2" Grid.Column="3"/>

                                <TextBlock Text="bounceSound" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [bounceSound], Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>

                                <TextBlock Text="guidedMissileType" Grid.Row="3" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox Grid.Row="3" Grid.Column="3"
                                  ItemsSource="{Binding GuidedMissileTypes}"
                                  SelectedItem="{Binding [guidedMissileType], Mode=TwoWay}"
                                  Height="22"/> 
                            </Grid>
                        </GroupBox>

                        <!-- Flags & Color -->
                        <GroupBox Header="Flags / Color">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Row="0" Grid.Column="0">
                                    <CheckBox Content="clipOnly" IsChecked="{Binding [clipOnly], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}"/>
                                    <CheckBox Content="requireLockonToFire" IsChecked="{Binding [requireLockonToFire], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}"/>
                                    <CheckBox Content="isHandModelOverridable" IsChecked="{Binding [isHandModelOverridable], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}"/>
                                </StackPanel>

                                <Grid Grid.Row="0" Grid.Column="1" Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="60"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="Red" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding [projectileRed], Mode=TwoWay}" Grid.Column="1" Height="22"/>

                                    <TextBlock Text="Green" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding [projectileGreen], Mode=TwoWay}" Grid.Column="3" Height="22"/>

                                    <TextBlock Text="Blue" Grid.Column="4" Style="{StaticResource FieldLabelStyle}" VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding [projectileBlue], Mode=TwoWay}" Grid.Column="5" Height="22"/>
                                </Grid>
                            </Grid>
                        </GroupBox>

                        <!-- Timings / Values -->
                        <GroupBox Header="Timings / Values">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="shellEjectEffect" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [shellEjectEffect], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="lastShotEjectEffect" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [lastShotEjectEffect], Mode=TwoWay}" Grid.Row="0" Grid.Column="3"/>

                                <TextBlock Text="projIgnitionDelay" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projIgnitionDelay], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <TextBlock Text="projectileDLight" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileDLight], Mode=TwoWay}" Grid.Row="1" Grid.Column="3"/>

                                <TextBlock Text="destabilizationRateTime" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [destabilizationRateTime], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                                <TextBlock Text="destabilizationCurvatureMax" Grid.Row="2" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [destabilizationCurvatureMax], Mode=TwoWay}" Grid.Row="2" Grid.Column="3"/>

                                <TextBlock Text="destabilizeDistance" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [destabilizeDistance], Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>

                                <TextBlock Text="projectileLifetime" Grid.Row="3" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [projectileLifetime], Mode=TwoWay}" Grid.Row="3" Grid.Column="3"/>

                                <TextBlock Text="reloadShowRocketTime" Grid.Row="4" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [reloadShowRocketTime], Mode=TwoWay}" Grid.Row="4" Grid.Column="1"/>

                                <TextBlock Text="adsZoomGunFov" Grid.Row="4" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [adsZoomGunFov], Mode=TwoWay}" Grid.Row="4" Grid.Column="3"/>

                                <TextBlock Text="maxSteeringAccel" Grid.Row="5" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [maxSteeringAccel], Mode=TwoWay}" Grid.Row="5" Grid.Column="1"/>
                            </Grid>
                        </GroupBox>

                        <!-- Bounce Settings -->
                        <GroupBox Header="Bounce Settings">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="400">
                                <StackPanel>
                                    <UniformGrid Columns="2">
                                        <!-- FULL parallel and perpendicular list below -->
                                    <TextBlock Text="parallelDefaultBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelDefaultBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularDefaultBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularDefaultBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelBarkBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelBarkBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularBarkBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularBarkBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelBrickBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelBrickBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularBrickBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularBrickBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelCarpetBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelCarpetBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularCarpetBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularCarpetBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelClothBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelClothBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularClothBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularClothBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelConcreteBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelConcreteBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularConcreteBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularConcreteBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelDirtBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelDirtBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularDirtBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularDirtBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelFleshBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelFleshBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularFleshBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularFleshBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelFoliageBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelFoliageBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularFoliageBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularFoliageBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelGlassBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelGlassBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularGlassBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularGlassBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelGrassBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelGrassBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularGrassBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularGrassBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelGravelBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelGravelBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularGravelBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularGravelBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelIceBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelIceBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularIceBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularIceBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelMetalBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelMetalBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularMetalBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularMetalBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelMudBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelMudBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularMudBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularMudBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelPaperBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelPaperBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularPaperBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularPaperBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelPlasterBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelPlasterBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularPlasterBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularPlasterBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelRockBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelRockBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularRockBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularRockBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelSandBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelSandBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularSandBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularSandBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelSnowBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelSnowBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularSnowBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularSnowBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelWaterBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelWaterBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularWaterBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularWaterBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelWoodBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelWoodBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularWoodBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularWoodBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelAsphaltBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelAsphaltBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularAsphaltBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularAsphaltBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelCeramicBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelCeramicBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularCeramicBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularCeramicBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelPlasticBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelPlasticBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularPlasticBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularPlasticBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelRubberBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelRubberBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularRubberBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularRubberBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelCushionBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelCushionBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularCushionBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularCushionBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelFruitBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelFruitBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularFruitBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularFruitBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="parallelPaintedMetalBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [parallelPaintedMetalBounce], Mode=TwoWay}"/>
                                    <TextBlock Text="perpendicularPaintedMetalBounce" Style="{StaticResource FieldLabelStyle}"/>
                                    <TextBox Text="{Binding [perpendicularPaintedMetalBounce], Mode=TwoWay}"/>
                                    </UniformGrid>
                                </StackPanel>
                            </ScrollViewer>
                        </GroupBox>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Turret Weapon" Style="{StaticResource ThemedSubTabItem}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Background="{StaticResource DarkBackgroundBrush}">
                    <StackPanel Margin="10">
                        <GroupBox Header="Turret Settings">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="250"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="250"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <!-- Define enough rows for all fields -->
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Left column -->
                                <TextBlock Text="stance" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox Grid.Row="0" Grid.Column="1"
                                  ItemsSource="{Binding StanceOptions}"
                                  SelectedValue="{Binding [stance], Mode=TwoWay}" />

                                <TextBlock Text="loopFireSound" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [loopFireSound], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <TextBlock Text="loopFireSoundPlayer" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [loopFireSoundPlayer], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                                <TextBlock Text="stopFireSound" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [stopFireSound], Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>

                                <TextBlock Text="stopFireSoundPlayer" Grid.Row="4" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [stopFireSoundPlayer], Mode=TwoWay}" Grid.Row="4" Grid.Column="1"/>

                                <TextBlock Text="rotateLoopSound" Grid.Row="5" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [rotateLoopSound], Mode=TwoWay}" Grid.Row="5" Grid.Column="1"/>

                                <TextBlock Text="rotateLoopSoundPlayer" Grid.Row="6" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [rotateLoopSoundPlayer], Mode=TwoWay}" Grid.Row="6" Grid.Column="1"/>

                                <TextBlock Text="useHintString" Grid.Row="7" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [useHintString], Mode=TwoWay}" Grid.Row="7" Grid.Column="1"/>

                                <TextBlock Text="dropHintString" Grid.Row="8" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [dropHintString], Mode=TwoWay}" Grid.Row="8" Grid.Column="1"/>

                                <TextBlock Text="overheatSound" Grid.Row="9" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [overheatSound], Mode=TwoWay}" Grid.Row="9" Grid.Column="1"/>

                                <TextBlock Text="overheatSoundPlayer" Grid.Row="10" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [overheatSoundPlayer], Mode=TwoWay}" Grid.Row="10" Grid.Column="1"/>

                                <TextBlock Text="script" Grid.Row="11" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [script], Mode=TwoWay}" Grid.Row="11" Grid.Column="1"/>

                                <!-- Right column -->
                                <TextBlock Text="leftArc" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [leftArc], Mode=TwoWay}" Grid.Row="0" Grid.Column="3"/>

                                <TextBlock Text="topArc" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [topArc], Mode=TwoWay}" Grid.Row="1" Grid.Column="3"/>

                                <TextBlock Text="rightArc" Grid.Row="2" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [rightArc], Mode=TwoWay}" Grid.Row="2" Grid.Column="3"/>

                                <TextBlock Text="bottomArc" Grid.Row="3" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [bottomArc], Mode=TwoWay}" Grid.Row="3" Grid.Column="3"/>

                                <TextBlock Text="grabArc" Grid.Row="4" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [grabarc], Mode=TwoWay}" Grid.Row="4" Grid.Column="3"/>

                                <TextBlock Text="accuracy" Grid.Row="5" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [accuracy], Mode=TwoWay}" Grid.Row="5" Grid.Column="3"/>

                                <TextBlock Text="aiSpread" Grid.Row="6" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [aiSpread], Mode=TwoWay}" Grid.Row="6" Grid.Column="3"/>

                                <TextBlock Text="playerSpread" Grid.Row="7" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [playerSpread], Mode=TwoWay}" Grid.Row="7" Grid.Column="3"/>

                                <TextBlock Text="animHorRotateInc" Grid.Row="8" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [animHorRotateInc], Mode=TwoWay}" Grid.Row="8" Grid.Column="3"/>

                                <TextBlock Text="minHorTurnSpeed" Grid.Row="9" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [minHorTurnSpeed], Mode=TwoWay}" Grid.Row="9" Grid.Column="3"/>

                                <TextBlock Text="minVertTurnSpeed" Grid.Row="10" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [minVertTurnSpeed], Mode=TwoWay}" Grid.Row="10" Grid.Column="3"/>

                                <TextBlock Text="maxHorTurnSpeed" Grid.Row="11" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [maxHorTurnSpeed], Mode=TwoWay}" Grid.Row="11" Grid.Column="3"/>

                                <TextBlock Text="maxVertTurnSpeed" Grid.Row="12" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [maxVertTurnSpeed], Mode=TwoWay}" Grid.Row="12" Grid.Column="3"/>

                                <TextBlock Text="horTurnSpeed" Grid.Row="13" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [horTurnSpeed], Mode=TwoWay}" Grid.Row="13" Grid.Column="3"/>

                                <TextBlock Text="vertTurnSpeed" Grid.Row="14" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [vertTurnSpeed], Mode=TwoWay}" Grid.Row="14" Grid.Column="3"/>

                                <TextBlock Text="pitchConvergenceTime" Grid.Row="15" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [pitchConvergenceTime], Mode=TwoWay}" Grid.Row="15" Grid.Column="3"/>

                                <TextBlock Text="yawConvergenceTime" Grid.Row="16" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [yawConvergenceTime], Mode=TwoWay}" Grid.Row="16" Grid.Column="3"/>

                                <TextBlock Text="suppressionTime" Grid.Row="17" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [suppressionTime], Mode=TwoWay}" Grid.Row="17" Grid.Column="3"/>

                                <TextBlock Text="maxRange" Grid.Row="18" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [maxRange], Mode=TwoWay}" Grid.Row="18" Grid.Column="3"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>


        </TabControl>
        
        




    </Grid>
</UserControl>
