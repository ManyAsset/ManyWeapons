<UserControl x:Class="ManyWeapons.View.GeneralSectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local1="clr-namespace:ManyWeapons.Converters"
             mc:Ignorable="av"
             Height="auto" Width="Auto">

    <UserControl.Resources>
        <!-- Sidebar button style -->


        <!-- Dark theme base colors -->
        <Color x:Key="DarkBackground">#1e1e1e</Color>
        <Color x:Key="DarkPanel">#2d2d30</Color>
        <Color x:Key="AccentOrange">#FF9800</Color>
        <Color x:Key="TextColor">White</Color>

        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{StaticResource DarkBackground}"/>
        <SolidColorBrush x:Key="DarkPanelBrush" Color="{StaticResource DarkPanel}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentOrange}"/>
        <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>


        <Style x:Key="DarkTabItemContent" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}" />
        </Style>

        <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <!-- Add this -->
            <Setter Property="Margin" Value="0,0,5,5" />
        </Style>

        <Style x:Key="FieldCheckStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,5" />
        </Style>

        <!-- Sidebar button style -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl dark theme style -->
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="ContentTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Tab headers -->
                            <TabPanel 
                Grid.Row="0"
                IsItemsHost="True"
                Background="{StaticResource DarkPanelBrush}"
                Margin="0"
                KeyboardNavigation.TabIndex="1" />

                            <!-- Selected tab content (intentionally blank) -->
                            <ContentPresenter 
                Grid.Row="1"
                ContentSource="SelectedContent"
                Margin="0"
                KeyboardNavigation.TabNavigation="Local" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- TabItem style -->
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="10,2" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DarkBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ThemedSubTabControl" TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource DarkPanelBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <TabPanel Background="{StaticResource DarkBackgroundBrush}"
                  IsItemsHost="True"
                  Margin="0"
                  KeyboardNavigation.TabIndex="1"
                  Panel.ZIndex="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ThemedSubTabItem" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
                            <ContentPresenter ContentSource="Header"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Selected tab -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>

                            <!-- Hover (not selected) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#444444"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- GroupBox style -->
        <Style TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderThickness" Value="0.7"/>
        </Style>

        <!-- ComboBoxToggleButton (arrow part) -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}" 
        BorderBrush="{TemplateBinding BorderBrush}" 
        BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Path HorizontalAlignment="Right" VerticalAlignment="Center" 
              Margin="0,0,4,0" 
              Data="M 0 0 L 4 4 L 8 0 Z" 
              Fill="{StaticResource AccentBrush}" />
                    <!--"{TemplateBinding Foreground}"-->
                </Grid>
            </Border>
        </ControlTemplate>

        <!-- ComboBox style -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="HorizontalContentAlignment"
Value="{Binding Path=HorizontalContentAlignment, 
        RelativeSource={RelativeSource AncestorType=ItemsControl, AncestorLevel=1}, 
        FallbackValue=Left}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                              Template="{StaticResource ComboBoxToggleButton}"
                              Grid.Column="2"
                              Focusable="false"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock Text="{TemplateBinding SelectionBoxItem}"
   Foreground="{StaticResource TextBrush}"
   Margin="4"
   VerticalAlignment="Center"
   HorizontalAlignment="Left"/>
                            </ToggleButton>
                            <Popup Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Slide">
                                <Border Background="{StaticResource DarkPanelBrush}"
                            BorderBrush="{StaticResource AccentBrush}"
                            BorderThickness="1"
                            MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBoxItem style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- TextBox style -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
        </Style>

        <!-- CheckBox style -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="18" Height="18"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                                <Path x:Name="CheckMark"
                  Width="12"
                  Height="12"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Visibility="Collapsed"
                  Stroke="{StaticResource AccentBrush}"
                  StrokeThickness="2"
                  Data="M2,6 L5,9 L10,3"/>
                            </Border>
                            <ContentPresenter Margin="5,0,0,0"
                          VerticalAlignment="Center"
                          RecognizesAccessKey="True"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Brushes -->
        <!-- Brushes updated to match orange/black theme -->
        <SolidColorBrush x:Key="arrowButtonForeground" Color="#FF9800"/>
        <!-- Orange -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#1e1e1e"/>
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#FFB84D"/>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#2d2d30"/>
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#555"/>
        <SolidColorBrush x:Key="NormalBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF9800"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="White"/>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFB84D" Offset="0.0"/>
            <GradientStop Color="#FF9800" Offset="0.5"/>
            <GradientStop Color="#FF6F00" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientStop Color="#2d2d30" Offset="0.0"/>
            <GradientStop Color="#2d2d30" Offset="0.6"/>
            <GradientStop Color="#1e1e1e" Offset="1.0"/>
        </LinearGradientBrush>

        <!-- ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border
       Name="Border"
       Margin="1"
       CornerRadius="2"
       Background="Transparent"
       BorderBrush="{StaticResource NormalBorderBrush}"
       BorderThickness="0">
                            <Path
           HorizontalAlignment="Center"
           VerticalAlignment="Center"
           Fill="White"
               Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
               Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
               Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Repeat Buttons (middle area) -->
        <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Thumb -->
        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border
       CornerRadius="2"
       Background="{TemplateBinding Background}"
       BorderBrush="{TemplateBinding BorderBrush}"
       BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Vertical ScrollBar Template -->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
            <Grid Width="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Horizontal ScrollBar Template -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
            <Grid Height="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Corner Template -->
        <ControlTemplate x:Key="ScrollViewerCorner" TargetType="Control">
            <Border Background="Transparent" />
        </ControlTemplate>

        <!-- Style for overall ScrollBar -->
        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12"/>
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall ScrollViewer -->
        <Style x:Key="FavsScrollViewer" TargetType="ScrollViewer">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
           Grid.Column="1" Grid.Row="0"
           Value="{TemplateBinding VerticalOffset}"
           Maximum="{TemplateBinding ScrollableHeight}"
           ViewportSize="{TemplateBinding ViewportHeight}"
           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
           Orientation="Horizontal"
           Grid.Column="0" Grid.Row="1"
           Value="{TemplateBinding HorizontalOffset}"
           Maximum="{TemplateBinding ScrollableWidth}"
           ViewportSize="{TemplateBinding ViewportWidth}"
           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Control Template="{StaticResource ScrollViewerCorner}" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <TabControl Margin="5" Background="{StaticResource DarkPanelBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Header="Basics" >
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="1">

                        <!-- ========== Text + Dropdowns ========== -->
                        <GroupBox Header="General Info" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="displayName" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [displayName], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="modeName" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [modeName], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <TextBlock Text="altWeapon" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [altWeapon], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                                <TextBlock Text="playerAnimType" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [playerAnimType], Mode=TwoWay}" Grid.Row="3" Grid.Column="1" Tag="playerAnimType">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="inventoryType" Grid.Row="4" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [inventoryType], Mode=TwoWay}" Grid.Row="4" Grid.Column="1" Tag="inventoryType">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="weaponType" Grid.Row="5" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [weaponType], Mode=TwoWay}" Grid.Row="5" Grid.Column="1" Tag="weaponType">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="weaponClass" Grid.Row="6" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [weaponClass], Mode=TwoWay}" Grid.Row="6" Grid.Column="1" Tag="weaponClass">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="penetrateType" Grid.Row="7" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [penetrateType], Mode=TwoWay}" Grid.Row="7" Grid.Column="1" Tag="penetrateType">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="impactType" Grid.Row="8" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [impactType], Mode=TwoWay}" Grid.Row="8" Grid.Column="1" Tag="impactType">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="fireType" Grid.Row="9" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <ComboBox SelectedItem="{Binding [fireType], Mode=TwoWay}" Grid.Row="9" Grid.Column="1" Tag="fireType">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource EnumBindingConverter}">
                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                            </Grid>
                        </GroupBox>

                        <!-- ========== Checkboxes Left ========== -->
                        <GroupBox Header="Weapon Settings">
                            <UniformGrid Columns="3" Margin="5">
                                <CheckBox Content="rifleBullet" IsChecked="{Binding [rifleBullet], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="armorPiercing" IsChecked="{Binding [armorPiercing], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="boltAction" IsChecked="{Binding [boltAction], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="aimDownSight" IsChecked="{Binding [aimDownSight], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="rechamberWhileAds" IsChecked="{Binding [rechamberWhileAds], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="adsFire" IsChecked="{Binding [adsFire], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="noPartialReload" IsChecked="{Binding [noPartialReload], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="segmentedReload" IsChecked="{Binding [segmentedReload], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="noAdsWhenMagEmpty" IsChecked="{Binding [noAdsWhenMagEmpty], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="cancelAutoHolsterWhenEmpty" IsChecked="{Binding [cancelAutoHolsterWhenEmpty], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="suppressAmmoReserveDisplay" IsChecked="{Binding [suppressAmmoReserveDisplay], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="laserSightDuringNightvision" IsChecked="{Binding [laserSightDuringNightvision], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="blocksProne" IsChecked="{Binding [blocksProne], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="silenced" IsChecked="{Binding [silenced], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="avoidDropCleanup" IsChecked="{Binding [avoidDropCleanup], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="enhanced" IsChecked="{Binding [enhanced], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                                <CheckBox Content="twoHanded" IsChecked="{Binding [twoHanded], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}" />
                            </UniformGrid>
                        </GroupBox>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="HUD">
                <ScrollViewer VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                    <Grid Margin="5"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- ICONS -->
                        <!-- ICONS -->
                        <GroupBox Header="Icons" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <Grid Margin="14" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                    <!-- was fixed 200 -->
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="150"/>
                                    <!-- allow extra room for Flip -->
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="hudIcon" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [hudIcon], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock Text="Ratio" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox SelectedItem="{Binding [hudIconRatio], Mode=TwoWay}" Grid.Row="0" Grid.Column="3" Width="60">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <sys:String>1:1</sys:String>
                                            <sys:String>2:1</sys:String>
                                            <sys:String>4:1</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="killIcon" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [killIcon], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock Text="Ratio" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox SelectedItem="{Binding [killIconRatio], Mode=TwoWay}" Grid.Row="1" Grid.Column="3" Width="60">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <sys:String>1:1</sys:String>
                                            <sys:String>2:1</sys:String>
                                            <sys:String>4:1</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                                <CheckBox Content="Flip"
                  IsChecked="{Binding [flipKillIcon], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}"
                  Grid.Row="1" Grid.Column="4" VerticalAlignment="Center"/>

                                <TextBlock Text="dpadIcon" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [dpadIcon], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>
                                <TextBlock Text="Ratio" Grid.Row="2" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox SelectedItem="{Binding [dpadIconRatio], Mode=TwoWay}" Grid.Row="2" Grid.Column="3" Width="60">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <sys:String>1:1</sys:String>
                                            <sys:String>2:1</sys:String>
                                            <sys:String>4:1</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="ammoCounterIcon" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [ammoCounterIcon], Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>
                                <TextBlock Text="Ratio" Grid.Row="3" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox SelectedItem="{Binding [ammoCounterIconRatio], Mode=TwoWay}" Grid.Row="3" Grid.Column="3" Width="60">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <sys:String>1:1</sys:String>
                                            <sys:String>2:1</sys:String>
                                            <sys:String>4:1</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <TextBlock Text="ammoCounterClip" Grid.Row="4" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox SelectedItem="{Binding [ammoCounterClip], Mode=TwoWay}" Grid.Row="4" Grid.Column="1">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <sys:String>AltWeapon</sys:String>
                                            <sys:String>Beltfed</sys:String>
                                            <sys:String>Magazine</sys:String>
                                            <sys:String>None</sys:String>
                                            <sys:String>Rocket</sys:String>
                                            <sys:String>ShortMagazine</sys:String>
                                            <sys:String>Shotgun</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                            </Grid>
                        </GroupBox>

                        <!-- RUMBLES -->
                        <GroupBox Header="Rumbles" Grid.Row="1" HorizontalAlignment="Stretch">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="fireRumble" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [fireRumble], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="meleeImpactRumble" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [meleeImpactRumble], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                            </Grid>
                        </GroupBox>

                        <!-- DEPTH OF FIELD -->
                        <GroupBox Header="Depth of Field" Grid.Row="2" HorizontalAlignment="Stretch">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="adsDofStart" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [adsDofStart], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="adsDofEnd" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [adsDofEnd], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                            </Grid>
                        </GroupBox>

                        <!-- RETICLES -->
                        <GroupBox Header="Reticle Settings" Grid.Row="3" HorizontalAlignment="Stretch">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="reticleCenter" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [reticleCenter], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock Text="Size" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [reticleCenterSize], Mode=TwoWay}" Grid.Row="0" Grid.Column="3"/>

                                <TextBlock Text="reticleSide" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [reticleSide], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock Text="Size" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [reticleSideSize], Mode=TwoWay}" Grid.Row="1" Grid.Column="3"/>

                                <TextBlock Text="hipReticleSidePos" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [hipReticleSidePos], Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                                <TextBlock Text="reticleMinOfs" Grid.Row="3" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [reticleMinOfs], Mode=TwoWay}" Grid.Row="3" Grid.Column="1"/>
                            </Grid>
                        </GroupBox>

                        <!-- ADS OVERLAY -->
                        <GroupBox Header="ADS Overlay" Grid.Row="4" HorizontalAlignment="Stretch">
                            <Grid Margin="5" HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="60"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="60"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="adsOverlay" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [adsOverlayShader], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock Text="X" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [adsOverlayWidth], Mode=TwoWay}" Grid.Row="0" Grid.Column="3"/>
                                <TextBlock Text="Y" Grid.Row="0" Grid.Column="4" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [adsOverlayHeight], Mode=TwoWay}" Grid.Row="0" Grid.Column="5"/>

                                <TextBlock Text="adsOverlayShaderLowRes" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [adsOverlayShaderLowRes], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <TextBlock Text="adsOverlayReticle" Grid.Row="2" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <ComboBox SelectedItem="{Binding [adsOverlayReticle], Mode=TwoWay}" Grid.Row="2" Grid.Column="1">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <sys:String>binoculars</sys:String>
                                            <sys:String>crosshair</sys:String>
                                            <sys:String>FG42</sys:String>
                                            <sys:String>none</sys:String>
                                            <sys:String>Springfield</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                            </Grid>
                        </GroupBox>

                        <!-- CROSSHAIR -->
                        <!-- CROSSHAIR -->
                        <GroupBox Header="Crosshair" Grid.Row="5" HorizontalAlignment="Stretch">
                            <Grid Margin="5" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                    <!-- Was 200 -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Was 200 -->
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="enemyCrosshairRange" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}" />
                                <TextBox Text="{Binding [enemyCrosshairRange], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
                                <CheckBox Content="crosshairColorChange"
                  IsChecked="{Binding [crosshairColorChange], Mode=TwoWay, Converter={StaticResource StringToBoolConverter}}"
                  Grid.Row="0" Grid.Column="2"/>
                            </Grid>
                        </GroupBox>

                    </Grid>
                </ScrollViewer>
            </TabItem>





            <TabItem Header="AI">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="5">
                        <GroupBox Header="AI Settings">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Left side -->
                                <TextBlock Text="fightDist" Grid.Row="0" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [fightDist], Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                                <TextBlock Text="maxDist" Grid.Row="1" Grid.Column="0" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [maxDist], Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                                <!-- Right side -->
                                <TextBlock Text="aiVsAiAccuracyGraph" Grid.Row="0" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [aiVsAiAccuracyGraph], Mode=TwoWay}" Grid.Row="0" Grid.Column="3"/>

                                <TextBlock Text="aiVsPlayerAccuracyGraph" Grid.Row="1" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [aiVsPlayerAccuracyGraph], Mode=TwoWay}" Grid.Row="1" Grid.Column="3"/>

                                <TextBlock Text="AIOverlayDescription" Grid.Row="2" Grid.Column="2" Style="{StaticResource FieldLabelStyle}"/>
                                <TextBox Text="{Binding [AIOverlayDescription], Mode=TwoWay}" Grid.Row="2" Grid.Column="3"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
